{"ast":null,"code":"export const MergeSort = (array, animations = []) => {\n  if (array.length <= 1) {\n    return array;\n  }\n  const mid = Math.floor(array.length / 2);\n  const first = array.slice(0, mid);\n  const second = array.slice(mid);\n  const sortedFirst = MergeSort(first, animations);\n  const sortedSecond = MergeSort(second, animations);\n  return merge(sortedFirst, sortedSecond, animations);\n};\n_c = MergeSort;\nvar _c;\n$RefreshReg$(_c, \"MergeSort\");","map":{"version":3,"names":["MergeSort","array","animations","length","mid","Math","floor","first","slice","second","sortedFirst","sortedSecond","merge","_c","$RefreshReg$"],"sources":["C:/Users/kaudi/Desktop/sorting-visualiser/src/components/Sorting Algorithms.js"],"sourcesContent":["export const MergeSort = (array, animations = []) => {\r\n    if (array.length <= 1) {\r\n      return array;\r\n    }\r\n  \r\n    const mid = Math.floor(array.length / 2);\r\n    const first = array.slice(0, mid);\r\n    const second = array.slice(mid);\r\n  \r\n    const sortedFirst = MergeSort(first, animations);\r\n    const sortedSecond = MergeSort(second, animations);\r\n  \r\n    return merge(sortedFirst, sortedSecond, animations);\r\n  };\r\n\r\n  "],"mappings":"AAAA,OAAO,MAAMA,SAAS,GAAGA,CAACC,KAAK,EAAEC,UAAU,GAAG,EAAE,KAAK;EACjD,IAAID,KAAK,CAACE,MAAM,IAAI,CAAC,EAAE;IACrB,OAAOF,KAAK;EACd;EAEA,MAAMG,GAAG,GAAGC,IAAI,CAACC,KAAK,CAACL,KAAK,CAACE,MAAM,GAAG,CAAC,CAAC;EACxC,MAAMI,KAAK,GAAGN,KAAK,CAACO,KAAK,CAAC,CAAC,EAAEJ,GAAG,CAAC;EACjC,MAAMK,MAAM,GAAGR,KAAK,CAACO,KAAK,CAACJ,GAAG,CAAC;EAE/B,MAAMM,WAAW,GAAGV,SAAS,CAACO,KAAK,EAAEL,UAAU,CAAC;EAChD,MAAMS,YAAY,GAAGX,SAAS,CAACS,MAAM,EAAEP,UAAU,CAAC;EAElD,OAAOU,KAAK,CAACF,WAAW,EAAEC,YAAY,EAAET,UAAU,CAAC;AACrD,CAAC;AAACW,EAAA,GAbSb,SAAS;AAAA,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}