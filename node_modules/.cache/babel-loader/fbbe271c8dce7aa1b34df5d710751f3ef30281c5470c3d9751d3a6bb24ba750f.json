{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kaudi\\\\Desktop\\\\sorting-visualiser\\\\src\\\\components\\\\Sorting Visualiser.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Bar from './Bar';\nimport styled from 'styled-components';\nimport { MergeSort } from './Sorting Algorithms';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    margin-top: 20px;\n    postion: absolute;\n`;\n_c = Container;\nconst Button = styled.button`\n    padding: 10px 20px;\n    font-size: 16px;\n    margin-bottom: 20px;\n    cursor: pointer;\n`;\n_c2 = Button;\nconst ArrayContainer = styled.div`\n    display: flex;\n    justify-content: center; \n    transform: scaleY(-1);\n    bottom: 40px;\n    position: absolute; \n`;\n_c3 = ArrayContainer;\nconst SortingVisualiser = () => {\n  _s();\n  const [array, setArray] = useState([]);\n  const [animations, setAnimations] = useState([]);\n  useEffect(() => {\n    resetArray();\n  }, []);\n  const resetArray = () => {\n    const newArray = [];\n    for (let i = 0; i < 130; i++) {\n      newArray.push(Math.floor(Math.random() * 450) + 1);\n    }\n    setArray(newArray);\n    setAnimations([]);\n  };\n  const handleMergeSort = () => {\n    const animations = [];\n    MergeSort([...array], animations);\n    setAnimations(animations);\n    animateSorting(animations);\n  };\n  const animateSorting = animations => {\n    animations.forEach((animation, index) => {\n      setTimeout(() => {\n        setArray(prevArray => {\n          const newArray = [...prevArray];\n          newArray[animation.index] = animation.value;\n          return newArray;\n        });\n      }, index * 50); // Adjust the delay for faster/slower animations\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      onClick: resetArray,\n      children: \"Generate New Array\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleMergeSort,\n      children: \"Merge Sort\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ArrayContainer, {\n      children: array.map((value, idx) => /*#__PURE__*/_jsxDEV(Bar, {\n        height: value\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n};\n_s(SortingVisualiser, \"0QLFVWe04sGWJNRA+QaZylm4/20=\");\n_c4 = SortingVisualiser;\nexport default SortingVisualiser;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"Button\");\n$RefreshReg$(_c3, \"ArrayContainer\");\n$RefreshReg$(_c4, \"SortingVisualiser\");","map":{"version":3,"names":["React","useState","useEffect","Bar","styled","MergeSort","jsxDEV","_jsxDEV","Container","div","_c","Button","button","_c2","ArrayContainer","_c3","SortingVisualiser","_s","array","setArray","animations","setAnimations","resetArray","newArray","i","push","Math","floor","random","handleMergeSort","animateSorting","forEach","animation","index","setTimeout","prevArray","value","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","idx","height","_c4","$RefreshReg$"],"sources":["C:/Users/kaudi/Desktop/sorting-visualiser/src/components/Sorting Visualiser.js"],"sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport Bar from './Bar'\r\nimport styled from 'styled-components';\r\nimport {MergeSort} from './Sorting Algorithms';\r\n\r\nconst Container = styled.div `\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    margin-top: 20px;\r\n    postion: absolute;\r\n`;\r\n\r\nconst Button = styled.button`\r\n    padding: 10px 20px;\r\n    font-size: 16px;\r\n    margin-bottom: 20px;\r\n    cursor: pointer;\r\n`;\r\n\r\nconst ArrayContainer = styled.div`\r\n    display: flex;\r\n    justify-content: center; \r\n    transform: scaleY(-1);\r\n    bottom: 40px;\r\n    position: absolute; \r\n`;\r\n\r\nconst SortingVisualiser = () => {\r\n    const [array, setArray] = useState([]);\r\n    const [animations, setAnimations] = useState([]);\r\n\r\n    useEffect(() => {\r\n        resetArray();\r\n    }, []);\r\n\r\n    const resetArray = () => {\r\n        const newArray = [];\r\n        for (let i = 0; i < 130; i++) {\r\n            newArray.push(Math.floor(Math.random() *450) + 1);\r\n        }\r\n        setArray(newArray);\r\n        setAnimations([]);\r\n    };\r\n\r\n    const handleMergeSort = () => {\r\n        const animations = [];\r\n        MergeSort([...array], animations);\r\n        setAnimations(animations);\r\n        animateSorting(animations);\r\n    };\r\n\r\n    const animateSorting = (animations) => {\r\n        animations.forEach((animation, index) => {\r\n            setTimeout(() => {\r\n                setArray((prevArray) => {\r\n                    const newArray = [...prevArray];\r\n                    newArray[animation.index] = animation.value;\r\n                    return newArray;\r\n                });\r\n            }, index * 50); // Adjust the delay for faster/slower animations\r\n        });\r\n    };\r\n\r\n    return (\r\n        <Container>\r\n            <Button onClick = {resetArray}>Generate New Array</Button>\r\n            <Button onClick = {handleMergeSort}>Merge Sort</Button>\r\n            <ArrayContainer>\r\n                {array.map((value, idx) => (\r\n                    <Bar key = {idx} height = {value} />\r\n                ))}\r\n            </ArrayContainer>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default SortingVisualiser;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}