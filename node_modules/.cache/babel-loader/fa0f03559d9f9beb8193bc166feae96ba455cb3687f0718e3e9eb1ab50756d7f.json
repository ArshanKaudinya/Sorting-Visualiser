{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kaudi\\\\Desktop\\\\sorting-visualiser\\\\src\\\\components\\\\Sorting Visualiser.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Bar from './Bar';\nimport styled from 'styled-components';\nimport { mergeSort } from './Sorting Algorithms'; // Importing mergeSort function\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ArrayContainer = styled.div`\n    display: flex;\n    justify-content: center;\n    transform: scaleY(-1);\n    bottom: 40px;\n    position: absolute;\n`;\n_c = ArrayContainer;\nconst SortingVisualiser = ({\n  array\n}) => {\n  _s();\n  const [animations, setAnimations] = useState([]);\n  const [sortedArray, setSortedArray] = useState([]);\n  useEffect(() => {\n    resetArray();\n  }, []);\n  const resetArray = () => {\n    const newArray = Array.from({\n      length: 130\n    }, () => Math.floor(Math.random() * 450) + 1);\n    setArray(newArray);\n    setSortedArray([]);\n  };\n  const handleMergeSort = () => {\n    const animations = mergeSort(array);\n    setAnimations(animations);\n    animateSorting(animations);\n  };\n  const animateSorting = animations => {\n    let tempArray = [...array];\n    animations.forEach((animation, index) => {\n      const {\n        comparison,\n        swap\n      } = animation;\n      setTimeout(() => {\n        if (swap) {\n          const [idx, newValue] = swap;\n          tempArray[idx] = newValue;\n          setSortedArray([...tempArray]);\n        }\n      }, index * 10); // Adjust the delay for faster/slower animations\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(ArrayContainer, {\n      children: sortedArray.map((value, idx) => /*#__PURE__*/_jsxDEV(Bar, {\n        height: value\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n};\n_s(SortingVisualiser, \"wWrImnOJPwnegYG4sjCouuakpMQ=\");\n_c2 = SortingVisualiser;\nexport default SortingVisualiser;\nvar _c, _c2;\n$RefreshReg$(_c, \"ArrayContainer\");\n$RefreshReg$(_c2, \"SortingVisualiser\");","map":{"version":3,"names":["React","useState","useEffect","Bar","styled","mergeSort","jsxDEV","_jsxDEV","ArrayContainer","div","_c","SortingVisualiser","array","_s","animations","setAnimations","sortedArray","setSortedArray","resetArray","newArray","Array","from","length","Math","floor","random","setArray","handleMergeSort","animateSorting","tempArray","forEach","animation","index","comparison","swap","setTimeout","idx","newValue","children","map","value","height","fileName","_jsxFileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["C:/Users/kaudi/Desktop/sorting-visualiser/src/components/Sorting Visualiser.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Bar from './Bar';\r\nimport styled from 'styled-components';\r\nimport { mergeSort } from './Sorting Algorithms'; // Importing mergeSort function\r\n\r\nconst ArrayContainer = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    transform: scaleY(-1);\r\n    bottom: 40px;\r\n    position: absolute;\r\n`;\r\n\r\nconst SortingVisualiser = ({ array }) => {\r\n    const [animations, setAnimations] = useState([]);\r\n    const [sortedArray, setSortedArray] = useState([]);\r\n\r\n    useEffect(() => {\r\n        resetArray();\r\n    }, []);\r\n\r\n    const resetArray = () => {\r\n        const newArray = Array.from({ length: 130 }, () => Math.floor(Math.random() * 450) + 1);\r\n        setArray(newArray);\r\n        setSortedArray([]);\r\n    };\r\n\r\n    const handleMergeSort = () => {\r\n        const animations = mergeSort(array);\r\n        setAnimations(animations);\r\n        animateSorting(animations);\r\n    };\r\n\r\n    const animateSorting = (animations) => {\r\n        let tempArray = [...array];\r\n        animations.forEach((animation, index) => {\r\n            const { comparison, swap } = animation;\r\n            setTimeout(() => {\r\n                if (swap) {\r\n                    const [idx, newValue] = swap;\r\n                    tempArray[idx] = newValue;\r\n                    setSortedArray([...tempArray]);\r\n                }\r\n            }, index * 10); // Adjust the delay for faster/slower animations\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <ArrayContainer>\r\n                {sortedArray.map((value, idx) => (\r\n                    <Bar key={idx} height={value} />\r\n                ))}\r\n            </ArrayContainer>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SortingVisualiser;\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,GAAG,MAAM,OAAO;AACvB,OAAOC,MAAM,MAAM,mBAAmB;AACtC,SAASC,SAAS,QAAQ,sBAAsB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAElD,MAAMC,cAAc,GAAGJ,MAAM,CAACK,GAAG;AACjC;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,EAAA,GANIF,cAAc;AAQpB,MAAMG,iBAAiB,GAAGA,CAAC;EAAEC;AAAM,CAAC,KAAK;EAAAC,EAAA;EACrC,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACe,WAAW,EAAEC,cAAc,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAElDC,SAAS,CAAC,MAAM;IACZgB,UAAU,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,UAAU,GAAGA,CAAA,KAAM;IACrB,MAAMC,QAAQ,GAAGC,KAAK,CAACC,IAAI,CAAC;MAAEC,MAAM,EAAE;IAAI,CAAC,EAAE,MAAMC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC;IACvFC,QAAQ,CAACP,QAAQ,CAAC;IAClBF,cAAc,CAAC,EAAE,CAAC;EACtB,CAAC;EAED,MAAMU,eAAe,GAAGA,CAAA,KAAM;IAC1B,MAAMb,UAAU,GAAGT,SAAS,CAACO,KAAK,CAAC;IACnCG,aAAa,CAACD,UAAU,CAAC;IACzBc,cAAc,CAACd,UAAU,CAAC;EAC9B,CAAC;EAED,MAAMc,cAAc,GAAId,UAAU,IAAK;IACnC,IAAIe,SAAS,GAAG,CAAC,GAAGjB,KAAK,CAAC;IAC1BE,UAAU,CAACgB,OAAO,CAAC,CAACC,SAAS,EAAEC,KAAK,KAAK;MACrC,MAAM;QAAEC,UAAU;QAAEC;MAAK,CAAC,GAAGH,SAAS;MACtCI,UAAU,CAAC,MAAM;QACb,IAAID,IAAI,EAAE;UACN,MAAM,CAACE,GAAG,EAAEC,QAAQ,CAAC,GAAGH,IAAI;UAC5BL,SAAS,CAACO,GAAG,CAAC,GAAGC,QAAQ;UACzBpB,cAAc,CAAC,CAAC,GAAGY,SAAS,CAAC,CAAC;QAClC;MACJ,CAAC,EAAEG,KAAK,GAAG,EAAE,CAAC,CAAC,CAAC;IACpB,CAAC,CAAC;EACN,CAAC;EAED,oBACIzB,OAAA;IAAA+B,QAAA,eACI/B,OAAA,CAACC,cAAc;MAAA8B,QAAA,EACVtB,WAAW,CAACuB,GAAG,CAAC,CAACC,KAAK,EAAEJ,GAAG,kBACxB7B,OAAA,CAACJ,GAAG;QAAWsC,MAAM,EAAED;MAAM,GAAnBJ,GAAG;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAkB,CAClC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACU;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChB,CAAC;AAEd,CAAC;AAAChC,EAAA,CA3CIF,iBAAiB;AAAAmC,GAAA,GAAjBnC,iBAAiB;AA6CvB,eAAeA,iBAAiB;AAAC,IAAAD,EAAA,EAAAoC,GAAA;AAAAC,YAAA,CAAArC,EAAA;AAAAqC,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}