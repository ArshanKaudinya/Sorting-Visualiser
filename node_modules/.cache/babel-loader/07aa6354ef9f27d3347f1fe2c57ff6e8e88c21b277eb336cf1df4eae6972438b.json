{"ast":null,"code":"import _taggedTemplateLiteral from\"C:/Users/kaudi/Desktop/sorting-visualiser/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";var _templateObject,_templateObject2,_templateObject3,_templateObject4,_templateObject5,_templateObject6,_templateObject7;import React,{useState,useRef}from'react';import Bar from'./Bar';import styled from'styled-components';import{mergeSort,bubbleSort}from'./Sorting Algorithms';// Importing mergeSort function\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const OuterContainer=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n    position: relative;\\n    width: 100%;\\n    height: 100vh; // Ensure it takes full height of the viewport\\n    overflow: hidden; // Prevent overflow\\n\"])));const ArrayContainer=styled.div(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n    display: flex;\\n    justify-content: center;\\n    transform: scaleY(-1);\\n    margin-top: 60px;\\n    position: absolute;\\n    top: 50%;\\n    left: 50%;\\n    transform: translate(-50%, -50%) scaleY(-1); // Center the container\\n    width: 100%; // Ensure the container spans the full width\\n\"])));const Container=styled.div(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n    display: flex;\\n    flex-direction: column;\\n    align-items: center;\\n    margin-top: 20px;\\n    position: relative;\\n    bottom: 40px;\\n\"])));const ButtonContainer=styled.div(_templateObject4||(_templateObject4=_taggedTemplateLiteral([\"\\n    display: flex;\\n    justify-content: center;\\n    margin-top: 20px;\\n\"])));const Button=styled.button(_templateObject5||(_templateObject5=_taggedTemplateLiteral([\"\\n    padding: 10px 20px;\\n    font-size: 16px;\\n    margin-right: 10px;\\n    cursor: pointer;\\n\"])));const SliderContainer=styled.div(_templateObject6||(_templateObject6=_taggedTemplateLiteral([\"\\n    display: flex;\\n    justify-content: center;\\n    margin-top: 20px;\\n    align-items: center;\\n\"])));const Slider=styled.input(_templateObject7||(_templateObject7=_taggedTemplateLiteral([\"\\n    margin: 0 10px;\\n\"])));const SortingVisualiser=()=>{const[array,setArray]=useState([]);const[animationSpeed,setAnimationSpeed]=useState(5);// Default speed\nconst timeouts=useRef([]);// Ref to track active timeouts\nconst generateRandomArray=(length,maxValue)=>{return Array.from({length},()=>Math.floor(Math.random()*maxValue)+1);};const animateSorting=animations=>{let tempArray=[...array];animations.forEach((animation,index)=>{const{type,indices}=animation;const timeoutId=setTimeout(()=>{if(type==='comparison2'){// Revert the color of the bars being compared\nconst[i,j]=indices;const barI=document.getElementById(\"bar-\".concat(i));const barJ=document.getElementById(\"bar-\".concat(j));if(barI)barI.style.backgroundColor='#ff9a55';if(barJ)barJ.style.backgroundColor='#ff9a55';}else if(type==='swap'){// Swap the bars\nconst[idx,newValue]=indices;tempArray[idx]=newValue;setArray([...tempArray]);// Optionally highlight the swapped bar\nconst bar=document.getElementById(\"bar-\".concat(idx));if(bar){bar.style.backgroundColor='#54fffb';setTimeout(()=>{if(bar)bar.style.backgroundColor='#ff9a55';},40);// Change the color back after a short delay\n}}},index*15/animationSpeed);// delay for animations\ntimeouts.current.push(timeoutId);});};const clearAllTimeouts=()=>{timeouts.current.forEach(timeoutId=>clearTimeout(timeoutId));timeouts.current=[];};const handleResetArray=()=>{clearAllTimeouts();// Clear any ongoing animations\nconst newArray=generateRandomArray(130,450);// Generate a new random array\nsetArray(newArray);};const handleMergeSort=()=>{clearAllTimeouts();// Clear any ongoing animations\nconst animations=mergeSort([...array]);// Get sorting animations\nanimateSorting(animations);};const handleBubbleSort=()=>{clearAllTimeouts();// Clear any ongoing animations\nconst animations=bubbleSort([...array]);// Get sorting animations\nanimateSorting(animations);};return/*#__PURE__*/_jsxs(OuterContainer,{children:[/*#__PURE__*/_jsxs(Container,{children:[/*#__PURE__*/_jsxs(ButtonContainer,{children:[/*#__PURE__*/_jsx(Button,{onClick:handleResetArray,children:\"Generate Array\"}),/*#__PURE__*/_jsx(Button,{onClick:handleMergeSort,children:\"Merge Sort\"}),/*#__PURE__*/_jsx(Button,{onClick:handleBubbleSort,children:\"Bubble Sort\"})]}),/*#__PURE__*/_jsxs(SliderContainer,{children:[/*#__PURE__*/_jsx(\"label\",{children:\"Speed:\"}),/*#__PURE__*/_jsx(Slider,{type:\"range\",min:\"1\",max:\"10\",value:animationSpeed,onChange:e=>setAnimationSpeed(Number(e.target.value))}),/*#__PURE__*/_jsx(\"span\",{children:animationSpeed})]})]}),/*#__PURE__*/_jsx(ArrayContainer,{children:array.map((value,idx)=>/*#__PURE__*/_jsx(Bar,{height:value,idx:idx},idx))})]});};export default SortingVisualiser;","map":{"version":3,"names":["React","useState","useRef","Bar","styled","mergeSort","bubbleSort","jsx","_jsx","jsxs","_jsxs","OuterContainer","div","_templateObject","_taggedTemplateLiteral","ArrayContainer","_templateObject2","Container","_templateObject3","ButtonContainer","_templateObject4","Button","button","_templateObject5","SliderContainer","_templateObject6","Slider","input","_templateObject7","SortingVisualiser","array","setArray","animationSpeed","setAnimationSpeed","timeouts","generateRandomArray","length","maxValue","Array","from","Math","floor","random","animateSorting","animations","tempArray","forEach","animation","index","type","indices","timeoutId","setTimeout","i","j","barI","document","getElementById","concat","barJ","style","backgroundColor","idx","newValue","bar","current","push","clearAllTimeouts","clearTimeout","handleResetArray","newArray","handleMergeSort","handleBubbleSort","children","onClick","min","max","value","onChange","e","Number","target","map","height"],"sources":["C:/Users/kaudi/Desktop/sorting-visualiser/src/components/Sorting Visualiser.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport Bar from './Bar';\r\nimport styled from 'styled-components';\r\nimport { mergeSort, bubbleSort } from './Sorting Algorithms'; // Importing mergeSort function\r\n\r\nconst OuterContainer = styled.div`\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100vh; // Ensure it takes full height of the viewport\r\n    overflow: hidden; // Prevent overflow\r\n`;\r\n\r\nconst ArrayContainer = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    transform: scaleY(-1);\r\n    margin-top: 60px;\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%) scaleY(-1); // Center the container\r\n    width: 100%; // Ensure the container spans the full width\r\n`;\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    margin-top: 20px;\r\n    position: relative;\r\n    bottom: 40px;\r\n`;\r\n\r\nconst ButtonContainer = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    margin-top: 20px;\r\n`;\r\n\r\nconst Button = styled.button`\r\n    padding: 10px 20px;\r\n    font-size: 16px;\r\n    margin-right: 10px;\r\n    cursor: pointer;\r\n`;\r\n\r\nconst SliderContainer = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    margin-top: 20px;\r\n    align-items: center;\r\n`;\r\n\r\nconst Slider = styled.input`\r\n    margin: 0 10px;\r\n`;\r\n\r\n\r\nconst SortingVisualiser = () => {\r\n    const [array, setArray] = useState([]);\r\n    const [animationSpeed, setAnimationSpeed] = useState(5); // Default speed\r\n    const timeouts = useRef([]); // Ref to track active timeouts\r\n\r\n    const generateRandomArray = (length, maxValue) => {\r\n        return Array.from({ length }, () => Math.floor(Math.random() * maxValue) + 1);\r\n    };\r\n\r\n    const animateSorting = (animations) => {\r\n        let tempArray = [...array];\r\n        animations.forEach((animation, index) => {\r\n            const { type, indices } = animation;\r\n            const timeoutId = setTimeout(() => {\r\n                if (type === 'comparison2') {\r\n                    // Revert the color of the bars being compared\r\n                    const [i, j] = indices;\r\n                    const barI = document.getElementById(`bar-${i}`);\r\n                    const barJ = document.getElementById(`bar-${j}`);\r\n                    if (barI) barI.style.backgroundColor = '#ff9a55';\r\n                    if (barJ) barJ.style.backgroundColor = '#ff9a55';\r\n                } else if (type === 'swap') {\r\n                    // Swap the bars\r\n                    const [idx, newValue] = indices;\r\n                    tempArray[idx] = newValue;\r\n                    setArray([...tempArray]);\r\n                    // Optionally highlight the swapped bar\r\n                    const bar = document.getElementById(`bar-${idx}`);\r\n                    if (bar) {\r\n                        bar.style.backgroundColor = '#54fffb';\r\n                        setTimeout(() => {\r\n                            if (bar) bar.style.backgroundColor = '#ff9a55';\r\n                        }, 40); // Change the color back after a short delay\r\n                    }\r\n                }\r\n            }, (index * 15) / animationSpeed); // delay for animations\r\n            timeouts.current.push(timeoutId);\r\n        });\r\n    };\r\n\r\n    const clearAllTimeouts = () => {\r\n        timeouts.current.forEach(timeoutId => clearTimeout(timeoutId));\r\n        timeouts.current = [];\r\n    };\r\n\r\n    const handleResetArray = () => {\r\n        clearAllTimeouts(); // Clear any ongoing animations\r\n        const newArray = generateRandomArray(130, 450); // Generate a new random array\r\n        setArray(newArray);\r\n    };\r\n\r\n    const handleMergeSort = () => {\r\n        clearAllTimeouts(); // Clear any ongoing animations\r\n        const animations = mergeSort([...array]); // Get sorting animations\r\n        animateSorting(animations);\r\n    };\r\n    const handleBubbleSort = () => {\r\n        clearAllTimeouts(); // Clear any ongoing animations\r\n        const animations = bubbleSort([...array]); // Get sorting animations\r\n        animateSorting(animations);\r\n    };\r\n\r\n    return (\r\n        <OuterContainer>\r\n        <Container>\r\n            <ButtonContainer>\r\n                <Button onClick={handleResetArray}>Generate Array</Button>\r\n                <Button onClick={handleMergeSort}>Merge Sort</Button>\r\n                <Button onClick={handleBubbleSort}>Bubble Sort</Button>\r\n            </ButtonContainer>\r\n            <SliderContainer>\r\n                <label>Speed:</label>\r\n                <Slider\r\n                    type=\"range\"\r\n                    min=\"1\"\r\n                    max=\"10\"\r\n                    value={animationSpeed}\r\n                    onChange={(e) => setAnimationSpeed(Number(e.target.value))}\r\n                />\r\n                <span>{animationSpeed}</span>\r\n            </SliderContainer>\r\n        </Container>\r\n        <ArrayContainer>\r\n            {array.map((value, idx) => (\r\n                <Bar key={idx} height={value} idx={idx} />\r\n            ))}\r\n        </ArrayContainer>\r\n    </OuterContainer>\r\n    );\r\n};\r\n\r\nexport default SortingVisualiser;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}